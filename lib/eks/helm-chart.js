"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HelmChartStack = void 0;
const eks = require("aws-cdk-lib/aws-eks");
const cdk = require("aws-cdk-lib");
class HelmChartStack extends cdk.Stack {
    constructor(scope, id, chart, clusterName, kubectlRoleArn, props) {
        super(scope, id, props);
        this.chart = chart;
        this.installHelmChart(clusterName, kubectlRoleArn);
    }
    installHelmChart(clusterName, kubectlRoleArn) {
        const cluster = eks.Cluster.fromClusterAttributes(this, `${clusterName}Ref`, {
            clusterName: clusterName,
            kubectlRoleArn: kubectlRoleArn
        });
        cluster.addHelmChart(this.chart.name, {
            chart: this.chart.chart,
            namespace: this.chart.namespace,
            repository: this.chart.repository,
            values: this.chart.values,
            release: this.chart.release,
            version: this.chart.version,
            createNamespace: this.chart.createNamespace,
        });
    }
}
exports.HelmChartStack = HelmChartStack;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVsbS1jaGFydC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImhlbG0tY2hhcnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsMkNBQTRDO0FBQzVDLG1DQUFvQztBQUtwQyxNQUFhLGNBQWUsU0FBUSxHQUFHLENBQUMsS0FBSztJQUczQyxZQUFZLEtBQWdCLEVBQUUsRUFBVSxFQUFFLEtBQWUsRUFBRSxXQUFtQixFQUFFLGNBQXNCLEVBQUUsS0FBc0I7UUFDNUgsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFFeEIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFdBQVcsRUFBRSxjQUFjLENBQUMsQ0FBQztJQUNyRCxDQUFDO0lBRUQsZ0JBQWdCLENBQUMsV0FBbUIsRUFBRSxjQUFzQjtRQUUxRCxNQUFNLE9BQU8sR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLHFCQUFxQixDQUFDLElBQUksRUFBRSxHQUFHLFdBQVcsS0FBSyxFQUFFO1lBQzNFLFdBQVcsRUFBRSxXQUFXO1lBQ3hCLGNBQWMsRUFBRSxjQUFjO1NBQy9CLENBQUMsQ0FBQTtRQUVGLE9BQU8sQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUU7WUFDcEMsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSztZQUN2QixTQUFTLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTO1lBQy9CLFVBQVUsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVU7WUFDakMsTUFBTSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTTtZQUN6QixPQUFPLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPO1lBQzNCLE9BQU8sRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU87WUFDM0IsZUFBZSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsZUFBZTtTQUM1QyxDQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0Y7QUEzQkQsd0NBMkJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGVrcyA9IHJlcXVpcmUoJ2F3cy1jZGstbGliL2F3cy1la3MnKTtcbmltcG9ydCBjZGsgPSByZXF1aXJlKCdhd3MtY2RrLWxpYicpO1xuaW1wb3J0IHsgSGVsbUNoYXJ0IH0gZnJvbSAnYXdzLWNkay1saWIvYXdzLWVrcyc7XG5pbXBvcnQgeyBDb25zdHJ1Y3QgfSBmcm9tICdjb25zdHJ1Y3RzJztcbmltcG9ydCB7IEVLU0NoYXJ0IH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcy9saWIvZWtzL2ludGVyZmFjZXMnO1xuXG5leHBvcnQgY2xhc3MgSGVsbUNoYXJ0U3RhY2sgZXh0ZW5kcyBjZGsuU3RhY2sge1xuICBjaGFydDogRUtTQ2hhcnQ7XG5cbiAgY29uc3RydWN0b3Ioc2NvcGU6IENvbnN0cnVjdCwgaWQ6IHN0cmluZywgY2hhcnQ6IEVLU0NoYXJ0LCBjbHVzdGVyTmFtZTogc3RyaW5nLCBrdWJlY3RsUm9sZUFybjogc3RyaW5nLCBwcm9wcz86IGNkay5TdGFja1Byb3BzKSB7XG4gICAgc3VwZXIoc2NvcGUsIGlkLCBwcm9wcyk7XG5cbiAgICB0aGlzLmNoYXJ0ID0gY2hhcnQ7XG4gICAgdGhpcy5pbnN0YWxsSGVsbUNoYXJ0KGNsdXN0ZXJOYW1lLCBrdWJlY3RsUm9sZUFybik7XG4gIH1cblxuICBpbnN0YWxsSGVsbUNoYXJ0KGNsdXN0ZXJOYW1lOiBzdHJpbmcsIGt1YmVjdGxSb2xlQXJuOiBzdHJpbmcpIHtcblxuICAgIGNvbnN0IGNsdXN0ZXIgPSBla3MuQ2x1c3Rlci5mcm9tQ2x1c3RlckF0dHJpYnV0ZXModGhpcywgYCR7Y2x1c3Rlck5hbWV9UmVmYCwge1xuICAgICAgY2x1c3Rlck5hbWU6IGNsdXN0ZXJOYW1lLFxuICAgICAga3ViZWN0bFJvbGVBcm46IGt1YmVjdGxSb2xlQXJuXG4gICAgfSlcblxuICAgIGNsdXN0ZXIuYWRkSGVsbUNoYXJ0KHRoaXMuY2hhcnQubmFtZSwge1xuICAgICAgY2hhcnQ6IHRoaXMuY2hhcnQuY2hhcnQsXG4gICAgICBuYW1lc3BhY2U6IHRoaXMuY2hhcnQubmFtZXNwYWNlLFxuICAgICAgcmVwb3NpdG9yeTogdGhpcy5jaGFydC5yZXBvc2l0b3J5LFxuICAgICAgdmFsdWVzOiB0aGlzLmNoYXJ0LnZhbHVlcyxcbiAgICAgIHJlbGVhc2U6IHRoaXMuY2hhcnQucmVsZWFzZSxcbiAgICAgIHZlcnNpb246IHRoaXMuY2hhcnQudmVyc2lvbixcbiAgICAgIGNyZWF0ZU5hbWVzcGFjZTogdGhpcy5jaGFydC5jcmVhdGVOYW1lc3BhY2UsXG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==